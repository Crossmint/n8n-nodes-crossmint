import { INodeProperties } from 'n8n-workflow';

export { mintNFT } from './mintNFT.operation';
export { getNFTsFromWallet } from './getNFTsFromWallet.operation';

export const nftFields: INodeProperties[] = [
	{
		displayName: 'Operation',
		name: 'operation',
		type: 'options',
		noDataExpression: true,
		displayOptions: { show: { resource: ['nft'] } },
		options: [
			{
				name: 'Mint NFT',
				value: 'mintNFT',
				description: 'Mint a new NFT to a wallet',
				action: 'Mint NFT',
			},
			{
				name: 'Get NFTs From Wallet',
				value: 'getNFTsFromWallet',
				description: 'Fetch the NFTs in a provided wallet',
				action: 'Get nfts from wallet',
			},
		],
		default: 'mintNFT',
	},

	// ---- Get NFTs from Wallet fields
	{
		displayName: 'Wallet Identifier',
		name: 'walletIdentifier',
		type: 'resourceLocator',
		displayOptions: { show: { resource: ['nft'], operation: ['getNFTsFromWallet'] } },
		default: { mode: 'email', value: '' },
		description: 'Select the wallet to get NFTs from',
		modes: [
			{
				displayName: 'Email',
				name: 'email',
				type: 'string',
				placeholder: 'user@example.com',
				validation: [
					{
						type: 'regex',
						properties: {
							regex: '^[^@]+@[^@]+\\.[^@]+$',
							errorMessage: 'Please enter a valid email address',
						},
					},
				],
			},
			{
				displayName: 'User ID',
				name: 'userId',
				type: 'string',
				placeholder: 'user-123',
			},
			{
				displayName: 'Address',
				name: 'address',
				type: 'string',
				placeholder: '0x1234567890123456789012345678901234567890',
				validation: [
					{
						type: 'regex',
						properties: {
							regex: '^(0x[a-fA-F0-9]{40}|[1-9A-HJ-NP-Za-km-z]{32,44})$',
							errorMessage: 'Please enter a valid wallet address',
						},
					},
				],
			},
		],
	},
	{
		displayName: 'Chain',
		name: 'nftsWalletChain',
		type: 'options',
		displayOptions: { show: { resource: ['nft'], operation: ['getNFTsFromWallet'] } },
		options: [
			{ name: 'Arbitrum', value: 'arbitrum' },
			{ name: 'Avalanche', value: 'avalanche' },
			{ name: 'Base', value: 'base' },
			{ name: 'BSC', value: 'bsc' },
			{ name: 'Ethereum', value: 'ethereum' },
			{ name: 'Optimism', value: 'optimism' },
			{ name: 'Polygon', value: 'polygon' },
			{ name: 'Solana', value: 'solana' },
		],
		default: 'polygon',
		description: 'Blockchain network (only used for email and userId wallet types)',
	},
	{
		displayName: 'Contract Addresses (Optional)',
		name: 'contractAddresses',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['getNFTsFromWallet'] } },
		default: '',
		placeholder: '0x1234...,0x5678... (comma-separated)',
		description: 'Filter NFTs by contract addresses (comma-separated list, optional)',
	},
	{
		displayName: 'Token ID (Optional)',
		name: 'nftsTokenId',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['getNFTsFromWallet'] } },
		default: '',
		placeholder: '123',
		description: 'Filter NFTs by specific token ID (optional)',
	},

	// ---- Mint NFT fields
	{
		displayName: 'Collection ID',
		name: 'collectionId',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'] } },
		default: '',
		placeholder: 'default-polygon or 9c82ef99-617f-497d-9abb-fd355291681b',
		description: 'Collection identifier (default collections: default-solana, default-polygon)',
		required: true,
	},
	{
		displayName: 'Recipient',
		name: 'nftRecipient',
		type: 'resourceLocator',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'] } },
		default: { mode: 'address', value: '' },
		description: 'Select the NFT recipient',
		modes: [
			{
				displayName: 'Email',
				name: 'email',
				type: 'string',
				placeholder: 'user@example.com',
				validation: [
					{
						type: 'regex',
						properties: {
							regex: '^[^@]+@[^@]+\\.[^@]+$',
							errorMessage: 'Please enter a valid email address',
						},
					},
				],
			},
			{
				displayName: 'User ID',
				name: 'userId',
				type: 'string',
				placeholder: 'user-123',
			},
			{
				displayName: 'Twitter',
				name: 'twitter',
				type: 'string',
				placeholder: 'username',
				validation: [
					{
						type: 'regex',
						properties: {
							regex: '^[a-zA-Z0-9_]{1,15}$',
							errorMessage: 'Please enter a valid Twitter handle (1-15 alphanumeric characters or underscores)',
						},
					},
				],
			},
			{
				displayName: 'X',
				name: 'x',
				type: 'string',
				placeholder: 'username',
				validation: [
					{
						type: 'regex',
						properties: {
							regex: '^[a-zA-Z0-9_]{1,15}$',
							errorMessage: 'Please enter a valid X handle (1-15 alphanumeric characters or underscores)',
						},
					},
				],
			},
			{
				displayName: 'Address',
				name: 'address',
				type: 'string',
				placeholder: '0x1234567890123456789012345678901234567890',
				validation: [
					{
						type: 'regex',
						properties: {
							regex: '^(0x[a-fA-F0-9]{40}|[1-9A-HJ-NP-Za-km-z]{32,44})$',
							errorMessage: 'Please enter a valid wallet address',
						},
					},
				],
			},
		],
	},
	{
		displayName: 'Chain',
		name: 'nftChain',
		type: 'options',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'] } },
		options: [
			{ name: 'Arbitrum', value: 'arbitrum' },
			{ name: 'Avalanche', value: 'avalanche' },
			{ name: 'Base', value: 'base' },
			{ name: 'BSC', value: 'bsc' },
			{ name: 'Ethereum', value: 'ethereum' },
			{ name: 'Optimism', value: 'optimism' },
			{ name: 'Polygon', value: 'polygon' },
			{ name: 'Solana', value: 'solana' },
		],
		default: 'polygon',
		description: 'Blockchain network for the NFT (only used for email, userId, twitter, x recipient types)',
	},
	{
		displayName: 'Metadata Type',
		name: 'metadataType',
		type: 'options',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'] } },
		options: [
			{ name: 'Metadata Object', value: 'object', description: 'Define metadata inline' },
			{ name: 'Metadata URL', value: 'url', description: 'Reference external JSON metadata' },
			{ name: 'Template ID', value: 'template', description: 'Use existing template' },
		],
		default: 'object',
		description: 'How to provide the NFT metadata',
		required: true,
	},
	{
		displayName: 'NFT Name',
		name: 'nftName',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'], metadataType: ['object'] } },
		default: '',
		placeholder: 'My Awesome NFT',
		description: 'The name of your NFT (Max length: 32)',
		required: true,
	},
	{
		displayName: 'NFT Image URL',
		name: 'nftImage',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'], metadataType: ['object'] } },
		default: '',
		placeholder: 'https://example.com/image.png',
		description: 'Direct link to your NFT image',
		required: true,
	},
	{
		displayName: 'NFT Description',
		name: 'nftDescription',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'], metadataType: ['object'] } },
		default: '',
		placeholder: 'A brief description of the NFT',
		description: 'A brief description of the NFT (Max length: 64)',
		required: true,
	},
	{
		displayName: 'Animation URL',
		name: 'nftAnimationUrl',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'], metadataType: ['object'] } },
		default: '',
		placeholder: 'https://example.com/animation.mp4',
		description: 'Animation URL for the NFT (EVM only)',
	},
	{
		displayName: 'Symbol (Solana)',
		name: 'nftSymbol',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'], metadataType: ['object'] } },
		default: '',
		placeholder: 'MTK',
		description: 'A shorthand identifier for the token (Max length: 10, Solana only)',
	},
	{
		displayName: 'Attributes',
		name: 'nftAttributes',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'], metadataType: ['object'] } },
		default: '',
		placeholder: '[{"trait_type": "Color", "value": "Blue"}, {"trait_type": "Rarity", "value": "Rare"}]',
		description: 'JSON array of attributes (optional)',
	},
	{
		displayName: 'Metadata URL',
		name: 'metadataUrl',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'], metadataType: ['url'] } },
		default: '',
		placeholder: 'https://example.com/metadata.json',
		description: 'URL to a JSON file containing the metadata',
		required: true,
	},
	{
		displayName: 'Template ID',
		name: 'templateId',
		type: 'string',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'], metadataType: ['template'] } },
		default: '',
		placeholder: 'template-12345',
		description: 'ID of the template to use for minting',
		required: true,
	},
	{
		displayName: 'Send Notification',
		name: 'sendNotification',
		type: 'boolean',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'] } },
		default: true,
		description: 'Whether to notify recipient via email about successful mint',
	},
	{
		displayName: 'Locale',
		name: 'nftLocale',
		type: 'options',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'] } },
		options: [
			{ name: 'English (US)', value: 'en-US' },
			{ name: 'Spanish', value: 'es' },
			{ name: 'French', value: 'fr' },
			{ name: 'German', value: 'de' },
		],
		default: 'en-US',
		description: 'Locale for email content',
	},
	{
		displayName: 'Reupload Linked Files',
		name: 'reuploadLinkedFiles',
		type: 'boolean',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'] } },
		default: true,
		description: 'Whether URLs in metadata will be resolved and reuploaded to IPFS',
	},
	{
		displayName: 'Compressed (Solana)',
		name: 'compressed',
		type: 'boolean',
		displayOptions: { show: { resource: ['nft'], operation: ['mintNFT'] } },
		default: true,
		description: 'Whether to use NFT compression for cheaper mint costs (Solana only)',
	},
];
