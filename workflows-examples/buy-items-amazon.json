{
  "name": "buy-items-amazon",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        0,
        0
      ],
      "id": "69423228-f601-4222-8d1b-3cab4ca84eda",
      "name": "When chat message received",
      "webhookId": "00000000-0000-0000-0000-000000000000"
    },
    {
      "parameters": {
        "url": "https://api.rainforestapi.com/request",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "123412341234123412341234"
            },
            {
              "name": "type",
              "value": "search"
            },
            {
              "name": "amazon_domain",
              "value": "amazon.com"
            },
            {
              "name": "search_term",
              "value": "={{ $json.output.keywords }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        592,
        0
      ],
      "id": "e13f86a2-8337-4091-b86d-ca91f969b9d7",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.products }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are an assistant that selects the best product from a JSON list.\nI will provide you:\n1. A JSON array of products.\n2. A selection criterion (defined by me).\n\nYour task is to parse the JSON, evaluate the products according to the criterion I give you, and return ONLY the best product as valid JSON. And if any field of each product is empty or null, do not select it.\nReturn ONLY valid JSON that matches the schema.\nDo not wrap it inside any other field.\n{\n  \"title\": \"string\",\n  \"price\": \"number\",\n  \"rating\": \"number\",\n  \"reviews\": \"number\",\n  \"url\": \"string\",\n  \"asin\": \"string\"\n}\n\nCriterion:\n{{ $('AI Agent1').item.json.output.criterion }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1008,
        0
      ],
      "id": "d4a537f3-a5c2-43ad-84eb-d7e928bbfa71",
      "name": "AI Agent",
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"title\": \"string\",\n  \"price\": \"number\",\n  \"rating\": \"number\",\n  \"reviews\": \"number\",\n  \"url\": \"string\",\n  \"asin\": \"string\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1152,
        208
      ],
      "id": "5d00d11b-0929-4d59-b31b-8083a982897e",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Given a natural language input describing a purchase, extract two things:\n1. The search keywords: a few essential words separated by spaces (no commas).\n2. The purchase criterion: a short string describing the conditions or specifications.\n\nReturn only valid JSON with the fields:\n{\n  \"keywords\": \"string\",\n  \"criterion\": \"string\"\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        208,
        0
      ],
      "id": "1b6414bb-5c69-469f-b8a7-36b599eaca8a",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"keywords\": \"string\",\n  \"criterion\": \"string\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        384,
        192
      ],
      "id": "02a14f8a-225a-43df-903b-5ea6eeb952d9",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        192,
        192
      ],
      "id": "369e8a01-2e41-4bb4-966d-dcef13430005",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "GhhYLl73NZEDEiDm",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        944,
        208
      ],
      "id": "eb6a38c3-dc07-4cc1-a5d2-6d769c521fbb",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "GhhYLl73NZEDEiDm",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $json.search_results || [];\n\nconst results = items.map(p => {\n  const url = p.link || \"\";\n\n  const match = url.match(/(?:\\/dp\\/|\\/gp\\/product\\/)([A-Z0-9]{10})/);\n  const asin = match ? match[1] : null;\n\n  return {\n    title: p.title,\n    price: p?.price?.value,\n    rating: p?.rating,\n    reviews: p?.ratings_total,\n    url,\n    asin\n  };\n});\n\nreturn [\n  {\n    json: {\n      products: results\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        0
      ],
      "id": "88fb0d88-8feb-434e-908a-f074556d5379",
      "name": "Parse JSON"
    },
    {
      "parameters": {
        "operation": "getWallet",
        "getWalletLocator": {
          "__rl": true,
          "value": "user@crossmint.com",
          "mode": "email"
        }
      },
      "type": "n8n-nodes-crossmint.crossmintWallets",
      "typeVersion": 1,
      "position": [
        1360,
        0
      ],
      "id": "eee03e5e-d9aa-4c54-99d7-e028bd035a4b",
      "name": "Get wallet",
      "credentials": {
        "crossmintApi": {
          "id": "cladul3IbEeBEPoH",
          "name": "Crossmint account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getBalance",
        "walletLocator": {
          "__rl": true,
          "value": "={{ $json.address }}",
          "mode": "address"
        }
      },
      "type": "n8n-nodes-crossmint.crossmintWallets",
      "typeVersion": 1,
      "position": [
        1568,
        0
      ],
      "id": "90275b14-a842-4ed1-8efa-e025ad717692",
      "name": "Get balance",
      "credentials": {
        "crossmintApi": {
          "id": "cladul3IbEeBEPoH",
          "name": "Crossmint account"
        }
      }
    },
    {
      "parameters": {
        "productIdentifier": "={{ $('AI Agent').item.json.output.asin }}",
        "recipientEmail": "user@crossmint.com",
        "recipientName": "User Paella",
        "addressLine1": "744 SW 10th St",
        "city": "Miami",
        "state": "FL",
        "postalCode": "33132",
        "payerAddress": "={{ $('Get wallet').item.json.address }}"
      },
      "type": "n8n-nodes-crossmint.crossmintCheckout",
      "typeVersion": 1,
      "position": [
        1776,
        0
      ],
      "id": "10af281d-d32f-4e96-a0a1-6d26d35fee0f",
      "name": "Create order",
      "credentials": {
        "crossmintApi": {
          "id": "cladul3IbEeBEPoH",
          "name": "Crossmint account"
        }
      }
    },
    {
      "parameters": {
        "operation": "purchaseProduct",
        "serializedTransaction": "={{ $json.order.payment.preparation.serializedTransaction }}",
        "payerAddress": "={{ $('Get wallet').item.json.address }}",
        "purchasePrivateKey": "your_key"
      },
      "type": "n8n-nodes-crossmint.crossmintCheckout",
      "typeVersion": 1,
      "position": [
        1984,
        0
      ],
      "id": "33516247-0dc0-479f-a6dd-3f128b62ab60",
      "name": "Pay order",
      "credentials": {
        "crossmintApi": {
          "id": "cladul3IbEeBEPoH",
          "name": "Crossmint account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Parse JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Parse JSON": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Get wallet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get wallet": {
      "main": [
        [
          {
            "node": "Get balance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get balance": {
      "main": [
        [
          {
            "node": "Create order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create order": {
      "main": [
        [
          {
            "node": "Pay order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bc298548-87df-4a22-8b61-623846b603fc",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fc50d9ee62f6a77e3dab561e3a87cbe7b6a062db2aad99602ae867f9c88d4509"
  },
  "id": "55HjLFsYHRi8Scdw",
  "tags": []
}